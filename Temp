// ConversionLogic.js

export function convertEnzymeToRTL(enzymeCode) {
  let rtlCode = enzymeCode;

  // Replace Enzyme imports
  rtlCode = rtlCode.replace(/import.*enzyme.*;/g, "import { render, screen, fireEvent } from '@testing-library/react';");

  // Replace `mount` with `render`
  rtlCode = rtlCode.replace(/Enzyme\.mount/g, "render");

  // Replace `.simulate('click')` with `fireEvent.click`
  rtlCode = rtlCode.replace(/\.simulate'click'/g, "fireEvent.click");

  // Replace `.simulate('change', { target: { value: '...' } })` with `fireEvent.change`
  rtlCode = rtlCode.replace(/\.simulate'change',\s*{.*?value:\s*'(.*?)'.*?}/g, "fireEvent.change($1)");

  // Replace `.find()` with `screen.getBy...` (manual step for now)
  rtlCode = rtlCode.replace(/component\.find(.*?)/g, "screen.getByTestId($1)");

  return rtlCode;
}

import React, { useState } from "react";

function FileInput({ onConvert }) {
  const [fileContent, setFileContent] = useState("");

  const handleInputChange = (e) => setFileContent(e.target.value);

  const handleConvert = () => onConvert(fileContent);

  return (
    <div>
      <h2>Paste Enzyme Test Code</h2>
      <textarea
        rows="20"
        cols="100"
        value={fileContent}
        onChange={handleInputChange}
        placeholder="Paste your Enzyme test code here..."
      />
      <br />
      <button onClick={handleConvert}>Convert to RTL</button>
    </div>
  );
}

export default FileInput;

import React from "react";

function ConvertedOutput({ convertedCode }) {
  return (
    <div>
      <h2>Converted RTL Test Code</h2>
      <pre style={{ background: "#f4f4f4", padding: "10px", borderRadius: "5px" }}>
        {convertedCode}
      </pre>
    </div>
  );
}

export default ConvertedOutput;
import React, { useState } from "react";
import FileInput from "./components/FileInput";
import ConvertedOutput from "./components/ConvertedOutput";
import { convertEnzymeToRTL } from "./components/ConversionLogic";

function App() {
  const [convertedCode, setConvertedCode] = useState("");

  const handleConvert = (enzymeCode) => {
    const rtlCode = convertEnzymeToRTL(enzymeCode);
    setConvertedCode(rtlCode);
  };

  return (
    <div style={{ padding: "20px" }}>
      <h1>Enzyme to React Testing Library Converter</h1>
      <FileInput onConvert={handleConvert} />
      {convertedCode && <ConvertedOutput convertedCode={convertedCode} />}
    </div>
  );
}

export default App;

body {
  font-family: Arial, sans-serif;
  margin: 20px;
}

textarea {
  width: 100%;
  margin-bottom: 10px;
  font-family: monospace;
}

button {
  padding: 10px 20px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}
