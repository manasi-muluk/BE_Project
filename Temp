import React from 'react';
import { render, screen, cleanup } from '@testing-library/react';
import BereavementForm from './BereavementForm';

describe('BereavementForm Tests', () => {
  afterEach(() => {
    cleanup(); // Clean up after each test
  });

  it('should render component correctly', () => {
    const props = {
      api: {
        data: {
          fatalError: false,
          messages: [],
          referenceData: {
            defaultCountries: [
              { code: 'GB', decode: 'United Kingdom', localCode: null, decodeClass: null },
              { code: 'OTH', decode: 'Other', localCode: null, decodeClass: null },
            ],
          },
        },
      },
      message: jest.fn(),
    };

    // Render the component
    const { container } = render(<BereavementForm api={props.api} message={props.message} {...props} />);

    // Assert the component matches the snapshot
    expect(container).toMatchSnapshot();

    // Assert that Routes render correctly
    const routes = screen.getAllByRole('route'); // Replace 'route' with a specific role or test ID
    expect(routes).toHaveLength(14); // Assuming 14 routes as per the Enzyme test

    // Optional: Add specific assertions to ensure routes render correctly
    routes.forEach((route, index) => {
      expect(route).toBeInTheDocument();
      expect(route).toHaveAttribute('data-testid', `route-${index}`); // Adjust as per your code
    });
  });
});
